services:
  structurizr:
    image: structurizr/lite:latest
    container_name: structurizr-container
    ports:
      - "8080:8080"
    volumes:
      - ./structurizr:/usr/local/structurizr

  registry-ui:
    image: joxit/docker-registry-ui:2.5.7
    container_name: registry-ui
    ports:
      - "5002:80"
    environment:
      - REGISTRY_TITLE=Deliveroo Registry
      - REGISTRY_URL=http://registry-server:5000  # Using internal network
      - REGISTRY_SECURED=false
    depends_on:
      - registry-server

  registry-server:
    image: registry:2.8.2
    container_name: registry-server
    ports:
      - "5001:5000"
    volumes:
      - registry-data:/var/lib/registry
    environment:
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '["http://localhost:5002"]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '[HEAD,GET,OPTIONS]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials: '[true]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '[Authorization,Accept,Cache-Control]'
      REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers: '[Docker-Content-Digest]'

  postgres:
    image: postgres:17-alpine
    container_name: postgres-container
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: strongpassword123
      POSTGRES_DB: deliveroo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - deliveroo-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:9.4
    container_name: pgadmin-container
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin_password
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - deliveroo-network
    depends_on:
      - postgres
    restart: unless-stopped

  wms-api:
    container_name: wms-api-container
    build:
      context: ./wms-api
      dockerfile: Dockerfile
    environment:
      - SERVICE_NAME=wms-api
    ports:
      - "3001:3001"
    networks:
      - deliveroo-network

volumes:
  registry-data:
  postgres_data:
  pgadmin_data:

networks:
  deliveroo-network:
    driver: bridge
